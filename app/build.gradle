plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.androidexample"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        /**
         * Compatibility map of the library that matches the projectâ€™s Kotlin version
         * https://developer.android.com/jetpack/androidx/releases/compose-kotlin
         * */
        kotlinCompilerExtensionVersion kotlin_compiler_extension_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    namespace 'com.example.androidexample'
}

dependencies {
    /**
     * BOM to library version mapping
     * https://developer.android.com/jetpack/compose/setup#bom-version-mapping
     * */
    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation composeBom
    androidTestImplementation composeBom

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"

    // Swipe refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:$swipe_refresh_version"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"

    // RxJava
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"
    implementation "androidx.compose.runtime:runtime-rxjava3"

    // RxAndroid
    implementation "io.reactivex.rxjava3:rxandroid:$rxjava_android_version"

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"

    // AssertJ
    testImplementation "org.assertj:assertj-joda-time:$assertj_joda_time_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"

    // UI Tests
    // Test rules and transitive dependencies
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    // Needed for createComposeRule, but not createAndroidComposeRule
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    debugImplementation "androidx.compose.ui:ui-tooling"
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}
